1
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ partition(?individualE, ?individualD) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



2
Requirement(?individualA) ^ TracedTo(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



3
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Launch Vehicle Interface)<-[:nestedClassifier]-(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]



4
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ result(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]



5
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



6
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



7
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Camera)]



8
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]



9
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ end(?individualF, ?individualE) ^ BindingConnector(?individualF) ^ ownedConnector(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)<-[:end]-(BindingConnector:)<-[:ownedConnector]-(Block:Analysis Context)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)<-[:end]-(BindingConnector:)<-[:ownedConnector]-(Block:Analysis Context)]



10
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ constrainedElement(?individualD, ?individualE) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



11
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



12
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedBehavior(?individualD, ?individualE) ^ uml:StateMachine(?individualE) ^ classifierBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedBehavior]->(uml:StateMachine:Spacecraft States)<-[:classifierBehavior]-(Block:Spacecraft)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



13
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



14
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



15
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



16
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ subpartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:subpartition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]



17
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



18
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ propertyPath(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)<-[:ownedAttribute]-(Block:Analysis Context)]



19
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ constrainedElement(?individualE, ?individualD) ^ uml:Constraint(?individualE) ^ ownedRule(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



20
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



21
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:AOCS Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Propulsion Module)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:DTS Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:OBDH Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Payload Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Power Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Harness Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Thermal Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Structure & Mechanisms Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:TT&C)-[:type]->(Block:TTC Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:TTC Subsystem)]



22
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ doActivity(?individualD, ?individualE) ^ uml:Activity(?individualE) ^ node(?individualE, ?individualF) ^ uml:ActivityParameterNode(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:type]->(Block:Sensor CMD)]



23
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]



24
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ specification(?individualC, ?individualD) ^ TestCase(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



25
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:InitialNode(?individualD) ^ source(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ edge(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:InitialNode:)<-[:source]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



26
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



27
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



28
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



29
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



30
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ target(?individualD, ?individualE) ^ uml:ActivityFinalNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:target]->(uml:ActivityFinalNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



31
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:ActivityFinalNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:ActivityFinalNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



32
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:ActivityFinalNode(?individualD) ^ target(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ edge(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:ActivityFinalNode:)<-[:target]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



33
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



34
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



35
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ definingFeature(?individualE, ?individualD) ^ uml:Slot(?individualE) ^ slot(?individualF, ?individualE) ^ uml:InstanceSpecification(?individualF) ^ classifier(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]



36
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Context)]



37
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(ReferenceProperty:orbit)<-[:redefinedProperty]-(ReferenceProperty:orbit)-[:type]->(Block:Circular Orbit)]



38
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



39
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]



40
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



41
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ supplier(?individualE, ?individualD) ^ Allocate(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:supplier]-(Allocate:)-[:client]->(ValueProperty:Sat Mass卫星重量)<-[:ownedAttribute]-(Block:Mission Enterprise)]



42
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:gnd cmd)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:telemetry)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:observation data)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Circular Orbit)]



43
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ target(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:target]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:target]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:target]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



44
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Spacecraft-Physical)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Spacecraft-Physical)]



45
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



46
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedBehavior(?individualD, ?individualE) ^ uml:StateMachine(?individualE) ^ classifierBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



47
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



48
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ group(?individualE, ?individualD) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



49
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ partWithPort(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:partWithPort]->(PartProperty:)-[:type]->(Block:Camera)]



50
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:EGYPT-2卫星用户需求)-[:nestedClassifier]->(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



51
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



52
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ propertyPath(?individualD, ?individualE) ^ PartProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



53
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ definingFeature(?individualD, ?individualC) ^ uml:Slot(?individualD) ^ slot(?individualE, ?individualD) ^ uml:InstanceSpecification(?individualE) ^ classifier(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]



54
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



55
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Orbit)]



56
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]



57
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



58
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ informationSource(?individualE, ?individualD) ^ uml:InformationFlow(?individualE) ^ realizingConnector(?individualE, ?individualF) ^ uml:Connector(?individualF) ^ ownedConnector(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:realizingConnector]->(uml:Connector:)<-[:ownedConnector]-(Block:Payload Subsystem)]



59
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ node(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



60
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ partition(?individualE, ?individualD) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



61
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:卫星类型)<-[:DerivedFrom]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星类型)<-[:DerivedFrom]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



62
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



63
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:InitialNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:InitialNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



64
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



65
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ constrainedElement(?individualD, ?individualE) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



66
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



67
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ end(?individualF, ?individualE) ^ uml:Connector(?individualF) ^ ownedConnector(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)<-[:end]-(uml:Connector:)<-[:ownedConnector]-(Block:Payload Subsystem)]



68
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ represents(?individualE, ?individualD) ^ Frame(?individualE) ^ UI(?individualF, ?individualE) ^ SimulationConfig(?individualF) ^ executionTarget(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]



69
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:InitialNode(?individualD) ^ source(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:InitialNode:)<-[:source]-(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



70
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ControlFlow(?individualE) ^ edge(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



71
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



72
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



73
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualC, ?individualB) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



74
Requirement(?individualA) ^ TracedTo(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



75
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ doActivity(?individualC, ?individualD) ^ uml:Activity(?individualD) ^ behavior(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ result(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:behavior]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:behavior]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]



76
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedBehavior]->(uml:StateMachine:Spacecraft States)<-[:classifierBehavior]-(Block:Spacecraft)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



77
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



78
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ source(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



79
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Mass 卫星)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Reliability)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Interface)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]



80
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]



81
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualC, ?individualB) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Unit Cost)<-[:DerivedFrom]-(Requirement:Cost)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星寿命life time)<-[:DerivedFrom]-(Requirement:寿命lifetime)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星类型)<-[:DerivedFrom]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



82
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]



83
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ specification(?individualC, ?individualD) ^ TestCase(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)-[:ownedAttribute]->(ReferenceProperty:)-[:type]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)-[:ownedAttribute]->(ReferenceProperty:scale)-[:type]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)-[:ownedAttribute]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



84
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ ownedRule(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



85
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]



86
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ specification(?individualC, ?individualD) ^ TestCase(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Test Operator)]



87
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:redefinedProperty]->(ReferenceProperty:orbit)-[:type]->(Block:Orbit)]



88
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



89
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ classifierBehavior(?individualD, ?individualE) ^ uml:StateMachine(?individualE) ^ ownedBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:classifierBehavior]->(uml:StateMachine:Spacecraft States)<-[:ownedBehavior]-(Block:Spacecraft)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



90
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



91
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedRule(?individualD, ?individualE) ^ uml:Constraint(?individualE) ^ constrainedElement(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



92
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



93
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



94
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:定位精度)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:谱段)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽SWATH)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:GSD)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:SNR)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:探测器性能)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:机动能力)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



95
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ subvertex(?individualE, ?individualD) ^ uml:Region(?individualE) ^ region(?individualF, ?individualE) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:subvertex]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



96
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ group(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



97
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



98
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Structural Integrity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



99
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:InitialNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:InitialNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



100
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



101
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ target(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:target]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:target]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:target]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



102
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:InitialNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:InitialNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



103
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:GSD)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



104
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ subvertex(?individualE, ?individualD) ^ uml:Region(?individualE) ^ region(?individualF, ?individualE) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:subvertex]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



105
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ specification(?individualC, ?individualD) ^ TestCase(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Domain)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Domain)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Domain)]



106
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:InitialNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:InitialNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



107
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedBehavior]->(uml:StateMachine:Spacecraft States)<-[:classifierBehavior]-(Block:Spacecraft)]



108
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)-[:DerivedFrom]->(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Mass 卫星)-[:DerivedFrom]->(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Reliability)-[:DerivedFrom]->(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)-[:DerivedFrom]->(Requirement:Structural Integrity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)-[:DerivedFrom]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)-[:DerivedFrom]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)-[:DerivedFrom]->(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Interface)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]



109
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)-[:type]->(Block:GndCmd&Tlm I/F)]



110
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



111
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ supplier(?individualE, ?individualD) ^ Allocate(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:supplier]-(Allocate:)-[:client]->(ValueProperty:Sat Mass卫星重量)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:supplier]-(Allocate:)-[:client]->(ValueProperty:Sat Mass卫星重量)<-[:ownedAttribute]-(Block:Mission Enterprise)]



112
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



113
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Spacecraft-Physical)]



114
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



115
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ end(?individualE, ?individualD) ^ BindingConnector(?individualE) ^ ownedConnector(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)<-[:end]-(BindingConnector:)<-[:ownedConnector]-(Block:Analysis Context)]



116
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



117
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]



118
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Context)]



119
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



120
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Launch Vehicle Interface)<-[:nestedClassifier]-(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



121
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Orbit)]



122
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



123
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ definingFeature(?individualE, ?individualD) ^ uml:Slot(?individualE) ^ slot(?individualF, ?individualE) ^ uml:InstanceSpecification(?individualF) ^ classifier(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]



124
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



125
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Cost)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:寿命lifetime)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]



126
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ classifierBehavior(?individualD, ?individualE) ^ uml:StateMachine(?individualE) ^ ownedBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



127
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



128
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ group(?individualE, ?individualD) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



129
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ method(?individualD, ?individualC) ^ TestCase(?individualD) ^ specification(?individualE, ?individualD) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:specification]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:specification]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:specification]-(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:specification]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:specification]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:specification]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:specification]-(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



130
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]



131
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]



132
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:EGYPT-2卫星用户需求)-[:nestedClassifier]->(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)-[:nestedClassifier]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)-[:nestedClassifier]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



133
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ method(?individualE, ?individualD) ^ TestCase(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



134
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



135
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



136
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ PartProperty(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:AOCS Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Propulsion Module)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:DTS Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:OBDH Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Payload Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Power Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Harness Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Thermal Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Structure & Mechanisms Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:TT&C)-[:type]->(Block:TTC Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:TTC Subsystem)]



137
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ generalization(?individualE, ?individualF) ^ uml:Generalization(?individualF) ^ general(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Spacecraft)]



138
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ supplier(?individualE, ?individualD) ^ Allocate(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:supplier]-(Allocate:)-[:client]->(ValueProperty:Sat Mass卫星重量)<-[:ownedAttribute]-(Block:Mission Enterprise)]



139
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



140
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ type(?individualC, ?individualD) ^ ValueType(?individualD) ^ type(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



141
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:维轨和规避燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:维轨和规避燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:离轨燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:离轨燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:定位精度)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:星上固存容量Data Storage)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:星上固存容量Data Storage)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:星上固存容量Data Storage)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:指向精度Pointing Accuracy)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:指向精度Pointing Accuracy)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:指向精度Pointing Accuracy)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:探测器性能)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:探测器性能)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:探测器性能)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:机动能力)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:机动能力)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:机动能力)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:故障处理能力Fault Management)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:故障处理能力Fault Management)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:故障处理能力Fault Management)-[:DerivedFrom]->(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:升降轨轨控能力)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:升降轨轨控能力)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:升降轨轨控能力)-[:DerivedFrom]->(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:离轨时间)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:离轨时间)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:离轨时间)-[:DerivedFrom]->(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:蓄电池循环次数)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:蓄电池循环次数)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:卫星寿命life time)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星寿命life time)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:卫星可靠度satellite reliability)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



142
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



143
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ method(?individualE, ?individualD) ^ TestCase(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



144
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ControlFlow(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



145
Requirement(?individualA) ^ TracedTo(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:EGYPT-2卫星用户需求)<-[:TracedTo]-(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



146
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



147
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)-[:type]->(Block:Mission Context)]



148
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



149
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



150
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ general(?individualE, ?individualD) ^ uml:Generalization(?individualE) ^ generalization(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



151
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



152
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



153
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ doActivity(?individualD, ?individualE) ^ uml:Activity(?individualE) ^ ownedParameter(?individualE, ?individualF) ^ uml:Parameter(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)-[:type]->(Block:Sensor CMD)]



154
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



155
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mechanical Interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:DTS interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:OBDH interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:GPS interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:Thermal interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



156
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



157
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]



158
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



159
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ constrainedElement(?individualD, ?individualE) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



160
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ partition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



161
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ type(?individualC, ?individualD) ^ ValueType(?individualD) ^ type(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:Data rate)<-[:ownedAttribute]-(Block:DTS Subsystem)]



162
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)-[:type]->(Block:Mission Context)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)-[:type]->(Block:Mission Context)]



163
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ client(?individualD, ?individualC) ^ Allocate(?individualD) ^ supplier(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:client]-(Allocate:)-[:supplier]->(ValueProperty:Payload_mass)<-[:ownedAttribute]-(Block:Payload Subsystem)]



164
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



165
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ specification(?individualD, ?individualE) ^ TestCase(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



166
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ partWithPort(?individualE, ?individualF) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:partWithPort]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



167
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ partition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



168
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ group(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



169
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



170
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ general(?individualE, ?individualD) ^ uml:Generalization(?individualE) ^ generalization(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Spacecraft-Physical)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



171
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



172
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ informationSource(?individualE, ?individualD) ^ uml:InformationFlow(?individualE) ^ informationTarget(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:informationTarget]->(uml:Port:sensor data if)<-[:ownedAttribute]-(Block:Signal Processor)]



173
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



174
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



175
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



176
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ partition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



177
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



178
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mechanical Interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:DTS interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:OBDH interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GPS interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Thermal interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



179
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:ActivityFinalNode(?individualD) ^ target(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:ActivityFinalNode:)<-[:target]-(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



180
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



181
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:ActivityFinalNode(?individualD) ^ node(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:ActivityFinalNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



182
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]



183
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



184
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:classifierBehavior]->(uml:StateMachine:Spacecraft States)<-[:ownedBehavior]-(Block:Spacecraft)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



185
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ source(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ result(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]



186
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationTarget(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]



187
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ inPartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



188
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ doActivity(?individualC, ?individualD) ^ uml:Activity(?individualD) ^ behavior(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:behavior]-(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:behavior]-(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]



189
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ type(?individualD, ?individualE) ^ ValueType(?individualE) ^ type(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



190
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



191
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



192
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ uml:Port(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)-[:type]->(Block:GndCmd&Tlm I/F)]



193
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



194
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Power)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



195
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



196
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ client(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ supplier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



197
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ behavior(?individualD, ?individualE) ^ uml:Activity(?individualE) ^ client(?individualF, ?individualE) ^ Allocate(?individualF) ^ supplier(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Assess Pass/Fail)<-[:client]-(Allocate:)-[:supplier]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Measure Resolution)<-[:client]-(Allocate:)-[:supplier]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Control Unit-Under-Test)<-[:client]-(Allocate:)-[:supplier]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Process Signal)<-[:client]-(Allocate:)-[:supplier]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Process Signal)<-[:client]-(Allocate:)-[:supplier]->(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Process Signal)<-[:client]-(Allocate:)-[:supplier]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Display Imagery)<-[:client]-(Allocate:)-[:supplier]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Control Thermal Source)<-[:client]-(Allocate:)-[:supplier]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Generate Thermal Emission)<-[:client]-(Allocate:)-[:supplier]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Spacecraft-Physical)]



198
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualC, ?individualB) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Unit Cost)<-[:DerivedFrom]-(Requirement:Cost)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星寿命life time)<-[:DerivedFrom]-(Requirement:寿命lifetime)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星类型)<-[:DerivedFrom]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



199
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)<-[:informationSource]-(ItemFlow:flow for Gnd CMD)-[:conveyed]->(Block:Gnd CMD)]



200
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:ActivityFinalNode(?individualD) ^ inPartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:ActivityFinalNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



201
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ constrainedElement(?individualE, ?individualD) ^ uml:Constraint(?individualE) ^ ownedRule(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



202
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ target(?individualD, ?individualC) ^ uml:Transition(?individualD) ^ transition(?individualE, ?individualD) ^ uml:Region(?individualE) ^ region(?individualF, ?individualE) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:target]-(uml:Transition:)<-[:transition]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



203
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]



204
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ partWithPort(?individualD, ?individualE) ^ PartProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:partWithPort]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



205
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



206
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



207
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ method(?individualD, ?individualC) ^ TestCase(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Test Operator)]



208
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



209
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



210
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedBehavior]->(uml:StateMachine:Spacecraft States)<-[:classifierBehavior]-(Block:Spacecraft)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedBehavior]->(uml:StateMachine:Spacecraft States)<-[:classifierBehavior]-(Block:Spacecraft)]



211
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedBehavior(?individualD, ?individualE) ^ uml:StateMachine(?individualE) ^ classifierBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



212
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ argument(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]



213
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



214
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ constrainedElement(?individualD, ?individualE) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



215
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ method(?individualD, ?individualC) ^ TestCase(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Domain)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Domain)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Domain)]



216
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ argument(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]



217
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ target(?individualD, ?individualE) ^ uml:ActivityFinalNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:target]->(uml:ActivityFinalNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



218
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationSource]-(ItemFlow:observation data)-[:conveyed]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationSource]-(ItemFlow:telemetry)-[:conveyed]->(Block:RF)]



219
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



220
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ PartProperty(?individualE) ^ informationSource(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]



221
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ itemProperty(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:observation data)<-[:itemProperty]-(ItemFlow:observation data1)-[:conveyed]->(Block:RF)]



222
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:AOCS Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Propulsion Module)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:DTS Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:OBDH Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Payload Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Power Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Harness Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Thermal Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Structure & Mechanisms Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:TT&C)-[:type]->(Block:TTC Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:TTC Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:AOCS Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Propulsion Module)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:DTS Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:OBDH Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Payload Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Power Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Harness Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Thermal Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Structure & Mechanisms Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:TT&C)-[:type]->(Block:TTC Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:TTC Subsystem)]



223
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



224
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ constrainedElement(?individualE, ?individualD) ^ uml:Constraint(?individualE) ^ ownedRule(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



225
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:classifierBehavior]->(uml:StateMachine:Spacecraft States)<-[:ownedBehavior]-(Block:Spacecraft)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:classifierBehavior]->(uml:StateMachine:Spacecraft States)<-[:ownedBehavior]-(Block:Spacecraft)]



226
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



227
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:维轨和规避燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:维轨和规避燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:离轨燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:离轨燃料配置)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:定位精度)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GSD)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GSD)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:探测器性能)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:探测器性能)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:探测器性能)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:机动能力)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:机动能力)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:机动能力)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:故障处理能力Fault Management)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:故障处理能力Fault Management)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:故障处理能力Fault Management)-[:DerivedFrom]->(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:升降轨轨控能力)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:升降轨轨控能力)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:升降轨轨控能力)-[:DerivedFrom]->(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:离轨时间)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:离轨时间)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:离轨时间)-[:DerivedFrom]->(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:蓄电池循环次数)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:蓄电池循环次数)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:卫星寿命life time)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星寿命life time)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:卫星可靠度satellite reliability)-[:DerivedFrom]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



228
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ inPartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



229
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ result(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]



230
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ subvertex(?individualE, ?individualD) ^ uml:Region(?individualE) ^ region(?individualF, ?individualE) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:subvertex]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



231
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ definingFeature(?individualE, ?individualD) ^ uml:Slot(?individualE) ^ slot(?individualF, ?individualE) ^ uml:InstanceSpecification(?individualF) ^ classifier(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]



232
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ node(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



233
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ represents(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ subpartition(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]



234
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ informationSource(?individualD, ?individualC) ^ uml:InformationFlow(?individualD) ^ realizingConnector(?individualD, ?individualE) ^ uml:Connector(?individualE) ^ ownedConnector(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:realizingConnector]->(uml:Connector:)<-[:ownedConnector]-(Block:Payload Subsystem)]



235
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ result(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]



236
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



237
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



238
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ doActivity(?individualD, ?individualE) ^ uml:Activity(?individualE) ^ ownedParameter(?individualE, ?individualF) ^ uml:Parameter(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)-[:type]->(Block:Sensor CMD)]



239
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



240
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ partition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



241
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ uml:Port(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)-[:type]->(Block:GndCmd&Tlm I/F)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)-[:type]->(Block:GndCmd&Tlm I/F)]



242
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ ReferenceProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)-[:type]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)-[:type]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)-[:type]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)-[:type]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)-[:type]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)-[:type]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)-[:type]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)-[:type]->(Block:Camera)]



243
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:AOCS Subsystem)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Propulsion Module)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:DTS Subsystem)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:OBDH Subsystem)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Payload Subsystem)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Power Subsystem)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Harness Subsystem)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Thermal Subsystem)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Structure & Mechanisms Subsystem)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:TT&C)-[:type]->(Block:TTC Subsystem)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:TTC Subsystem)]



244
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:InitialNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:InitialNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



245
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:系统寿命mission life )<-[:nestedClassifier]-(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]



246
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ControlFlow(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



247
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ propertyPath(?individualD, ?individualE) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]



248
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



249
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



250
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ ownedRule(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



251
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ end(?individualE, ?individualD) ^ uml:Connector(?individualE) ^ realizingConnector(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)<-[:end]-(uml:Connector:)<-[:realizingConnector]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



252
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)<-[:ownedAttribute]-(Block:Analysis Context)]



253
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



254
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:gnd cmd)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:telemetry)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:observation data)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Circular Orbit)]



255
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ type(?individualD, ?individualE) ^ ValueType(?individualE) ^ type(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



256
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ represents(?individualE, ?individualD) ^ Frame(?individualE) ^ UI(?individualF, ?individualE) ^ SimulationConfig(?individualF) ^ executionTarget(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]



257
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ definingFeature(?individualE, ?individualD) ^ uml:Slot(?individualE) ^ slot(?individualF, ?individualE) ^ uml:InstanceSpecification(?individualF) ^ classifier(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:analysis Context.icq analysis.camera Parameters Analysis.payload Subsystem.partProperty7)-[:classifier]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:definingFeature]-(uml:Slot:)<-[:slot]-(uml:InstanceSpecification:camera Parameters Analysis.payload Subsystem.partProperty)-[:classifier]->(Block:Camera)]



258
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Spacecraft-Physical)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



259
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



260
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ source(?individualD, ?individualC) ^ uml:Transition(?individualD) ^ transition(?individualE, ?individualD) ^ uml:Region(?individualE) ^ region(?individualF, ?individualE) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:source]-(uml:Transition:)<-[:transition]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



261
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



262
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ informationSource(?individualE, ?individualD) ^ uml:InformationFlow(?individualE) ^ informationTarget(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:informationTarget]->(uml:Port:sensor data if)<-[:ownedAttribute]-(Block:Signal Processor)]



263
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



264
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ subvertex(?individualD, ?individualC) ^ uml:Region(?individualD) ^ region(?individualE, ?individualD) ^ uml:StateMachine(?individualE) ^ classifierBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:subvertex]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



265
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ client(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ supplier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



266
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



267
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



268
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ group(?individualE, ?individualD) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



269
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]



270
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) -> relation(?individualA, ?individualD)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



271
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



272
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



273
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]



274
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Orbit)]



275
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ partWithPort(?individualD, ?individualE) ^ PartProperty(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:partWithPort]->(PartProperty:)-[:type]->(Block:Camera)]



276
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



277
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



278
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]



279
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ partWithPort(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:partWithPort]->(PartProperty:)-[:type]->(Block:Camera)]



280
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)-[:DerivedFrom]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



281
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ partition(?individualE, ?individualD) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



282
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ObjectFlow(?individualD) ^ source(?individualD, ?individualE) ^ uml:OutputPin(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]



283
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



284
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Quality Characteristics)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Physical)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Interface)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:general specification)<-[:nestedClassifier]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



285
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



286
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ type(?individualD, ?individualE) ^ ValueType(?individualE) ^ type(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:Data rate)<-[:ownedAttribute]-(Block:DTS Subsystem)]



287
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]



288
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(ReferenceProperty:orbit)<-[:redefinedProperty]-(ReferenceProperty:orbit)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



289
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ classifierBehavior(?individualD, ?individualE) ^ uml:StateMachine(?individualE) ^ ownedBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



290
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ type(?individualC, ?individualD) ^ ValueType(?individualD) ^ type(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]



291
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



292
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ uml:Port(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)-[:type]->(Block:GndCmd&Tlm I/F)]



293
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



294
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Cost)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:寿命lifetime)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



295
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:平台能力)-[:DerivedFrom]->(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



296
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



297
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Power)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



298
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



299
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ target(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:target]-(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:target]-(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:target]-(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



300
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ client(?individualE, ?individualD) ^ Allocate(?individualE) ^ supplier(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:client]-(Allocate:)-[:supplier]->(ValueProperty:Payload_mass)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:client]-(Allocate:)-[:supplier]->(ValueProperty:Payload_mass)<-[:ownedAttribute]-(Block:Payload Subsystem)]



301
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



302
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ client(?individualE, ?individualD) ^ Allocate(?individualE) ^ supplier(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:client]-(Allocate:)-[:supplier]->(ValueProperty:Payload_mass)<-[:ownedAttribute]-(Block:Payload Subsystem)]



303
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ edge(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



304
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:成像能力和质量image capacity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



305
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload Accommodation)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload Accommodation)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Thermal Protection)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Thermal Protection)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:GSD)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GSD)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:GSD)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Unit Cost)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星寿命life time)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:nestedClassifier]-(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



306
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ argument(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]



307
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ObjectFlow(?individualE) ^ source(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]



308
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ general(?individualE, ?individualD) ^ uml:Generalization(?individualE) ^ generalization(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



309
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ propertyPath(?individualD, ?individualE) ^ PartProperty(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Camera)]



310
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ group(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



311
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



312
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedRule(?individualD, ?individualE) ^ uml:Constraint(?individualE) ^ constrainedElement(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



313
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



314
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ObjectFlow(?individualE) ^ target(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]



315
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ method(?individualD, ?individualC) ^ TestCase(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



316
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



317
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ doActivity(?individualD, ?individualE) ^ uml:Activity(?individualE) ^ client(?individualF, ?individualE) ^ Allocate(?individualF) ^ supplier(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Spacecraft-Physical)]



318
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ argument(?individualD, ?individualE) ^ uml:InputPin(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]



319
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



320
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ target(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ result(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:target]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]



321
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



322
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



323
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



324
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:ActivityFinalNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ActivityFinalNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



325
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ end(?individualF, ?individualE) ^ uml:Connector(?individualF) ^ ownedConnector(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)<-[:end]-(uml:Connector:)<-[:ownedConnector]-(Block:Payload Subsystem)]



326
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



327
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)<-[:ownedAttribute]-(Block:Analysis Context)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)<-[:ownedAttribute]-(Block:Analysis Context)]



328
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]



329
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



330
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



331
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ constrainedElement(?individualE, ?individualD) ^ uml:Constraint(?individualE) ^ ownedRule(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



332
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



333
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:InitialNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:InitialNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



334
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:AOCS Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Propulsion Module)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:DTS Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:OBDH Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Payload Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Power Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Harness Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Thermal Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Structure & Mechanisms Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:TT&C)-[:type]->(Block:TTC Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:TTC Subsystem)]



335
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



336
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ method(?individualE, ?individualD) ^ TestCase(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



337
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ inPartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



338
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ partWithPort(?individualD, ?individualE) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:partWithPort]->(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



339
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ target(?individualD, ?individualC) ^ uml:Transition(?individualD) ^ transition(?individualE, ?individualD) ^ uml:Region(?individualE) ^ region(?individualF, ?individualE) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:target]-(uml:Transition:)<-[:transition]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



340
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Spacecraft-Physical)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



341
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ constrainedElement(?individualD, ?individualE) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



342
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ propertyPath(?individualD, ?individualE) ^ PartProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Context)]



343
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ supplier(?individualD, ?individualC) ^ Allocate(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:supplier]-(Allocate:)-[:client]->(ValueProperty:Sat Mass卫星重量)<-[:ownedAttribute]-(Block:Mission Enterprise)]



344
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ subpartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:subpartition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



345
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ constrainedElement(?individualD, ?individualE) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]



346
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ end(?individualF, ?individualE) ^ BindingConnector(?individualF) ^ ownedConnector(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)<-[:end]-(BindingConnector:)<-[:ownedConnector]-(Block:Analysis Context)]



347
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ doActivity(?individualC, ?individualD) ^ uml:Activity(?individualD) ^ behavior(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ argument(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:behavior]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:behavior]-(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]



348
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:ActivityFinalNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:ActivityFinalNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



349
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ uml:Port(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)-[:type]->(Block:GndCmd&Tlm I/F)]



350
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



351
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:系统寿命mission life )<-[:nestedClassifier]-(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



352
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



353
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ PartProperty(?individualE) ^ informationSource(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationSource]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]



354
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ represents(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ subpartition(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]



355
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)-[:DerivedFrom]->(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)-[:DerivedFrom]->(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Reliability)-[:DerivedFrom]->(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)-[:DerivedFrom]->(Requirement:Structural Integrity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)-[:DerivedFrom]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)-[:DerivedFrom]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)-[:DerivedFrom]->(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Interface)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



356
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



357
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)<-[:type]-(ReferenceProperty:)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)<-[:type]-(ReferenceProperty:scale)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)<-[:type]-(ReferenceProperty:)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]



358
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:InitialNode(?individualD) ^ node(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:InitialNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



359
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



360
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



361
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ ownedRule(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



362
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



363
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:AOCS Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Propulsion Module)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:DTS Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:OBDH Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Payload Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Power Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Harness Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Thermal Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Structure & Mechanisms Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:TT&C)-[:type]->(Block:TTC Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:TTC Subsystem)]



364
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:classifierBehavior]->(uml:StateMachine:Spacecraft States)<-[:ownedBehavior]-(Block:Spacecraft)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



365
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



366
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



367
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ end(?individualF, ?individualE) ^ BindingConnector(?individualF) ^ ownedConnector(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)<-[:end]-(BindingConnector:)<-[:ownedConnector]-(Block:Analysis Context)]



368
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



369
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedConnector(?individualD, ?individualE) ^ uml:Connector(?individualE) ^ realizingConnector(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedConnector]->(uml:Connector:)<-[:realizingConnector]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedConnector]->(uml:Connector:)<-[:realizingConnector]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedConnector]->(uml:Connector:)<-[:realizingConnector]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]



370
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ partition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



371
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



372
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



373
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:卫星类型)<-[:DerivedFrom]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



374
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ group(?individualE, ?individualD) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:group]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



375
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



376
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ client(?individualE, ?individualD) ^ Allocate(?individualE) ^ supplier(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:client]-(Allocate:)-[:supplier]->(ValueProperty:Payload_mass)<-[:ownedAttribute]-(Block:Payload Subsystem)]



377
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ group(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



378
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



379
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:ActivityFinalNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:ActivityFinalNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



380
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationTarget(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]



381
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ result(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]



382
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationTarget(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]



383
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



384
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



385
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ result(?individualD, ?individualE) ^ uml:OutputPin(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]



386
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



387
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



388
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ subpartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:subpartition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



389
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)-[:DerivedFrom]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:MTF)-[:DerivedFrom]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



390
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



391
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]



392
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Power)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Interface)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



393
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



394
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ informationSource(?individualE, ?individualD) ^ uml:InformationFlow(?individualE) ^ conveyed(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



395
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ client(?individualE, ?individualD) ^ Allocate(?individualE) ^ supplier(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:client]-(Allocate:)-[:supplier]->(ValueProperty:Payload_mass)<-[:ownedAttribute]-(Block:Payload Subsystem)]



396
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:classifierBehavior]->(uml:StateMachine:Spacecraft States)<-[:ownedBehavior]-(Block:Spacecraft)]



397
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ doActivity(?individualC, ?individualD) ^ uml:Activity(?individualD) ^ client(?individualE, ?individualD) ^ Allocate(?individualE) ^ supplier(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Spacecraft-Physical)]



398
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ doActivity(?individualC, ?individualD) ^ uml:Activity(?individualD) ^ node(?individualD, ?individualE) ^ uml:ActivityParameterNode(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:type]->(Block:Sensor CMD)]



399
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ doActivity(?individualC, ?individualD) ^ uml:Activity(?individualD) ^ behavior(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:behavior]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:behavior]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]



400
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ constrainedElement(?individualE, ?individualD) ^ uml:Constraint(?individualE) ^ ownedRule(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]



401
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



402
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ObjectFlow(?individualE) ^ source(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:source]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]



403
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:InitialNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:InitialNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



404
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



405
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) -> relation(?individualA, ?individualD)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]



406
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



407
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



408
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ partition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



409
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ constrainedElement(?individualE, ?individualD) ^ uml:Constraint(?individualE) ^ constrainedElement(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]



410
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



411
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ subvertex(?individualE, ?individualD) ^ uml:Region(?individualE) ^ region(?individualF, ?individualE) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:subvertex]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



412
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) -> relation(?individualA, ?individualD)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



413
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ group(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



414
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:GSD)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:GSD)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



415
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]



416
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:redefinedProperty]->(ReferenceProperty:orbit)<-[:ownedAttribute]-(Block:Spacecraft)]



417
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



418
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



419
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ObjectFlow(?individualE) ^ target(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]



420
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ informationSource(?individualE, ?individualD) ^ uml:InformationFlow(?individualE) ^ conveyed(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



421
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ ownedRule(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



422
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ generalization(?individualE, ?individualF) ^ uml:Generalization(?individualF) ^ general(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Spacecraft)]



423
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



424
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:成像能力和质量image capacity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



425
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ doActivity(?individualC, ?individualD) ^ uml:Activity(?individualD) ^ ownedParameter(?individualD, ?individualE) ^ uml:Parameter(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)-[:type]->(Block:Sensor CMD)]



426
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ source(?individualD, ?individualC) ^ uml:Transition(?individualD) ^ transition(?individualE, ?individualD) ^ uml:Region(?individualE) ^ region(?individualF, ?individualE) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:source]-(uml:Transition:)<-[:transition]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



427
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)<-[:ownedAttribute]-(Block:Analysis Context)]



428
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



429
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Mission Enterprise)]



430
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



431
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ client(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ supplier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



432
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ argument(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]



433
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



434
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ specification(?individualC, ?individualD) ^ TestCase(?individualD) ^ method(?individualD, ?individualE) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)-[:method]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)-[:method]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)-[:method]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)-[:method]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)-[:method]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)-[:method]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)-[:method]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



435
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



436
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ doActivity(?individualD, ?individualE) ^ uml:Activity(?individualE) ^ node(?individualE, ?individualF) ^ uml:ActivityParameterNode(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:type]->(Block:Sensor CMD)]



437
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Cost)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:寿命lifetime)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



438
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



439
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ControlFlow(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



440
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ specification(?individualD, ?individualE) ^ TestCase(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



441
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Camera)]



442
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ type(?individualD, ?individualE) ^ ValueType(?individualE) ^ type(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]



443
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ partition(?individualE, ?individualD) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:partition]-(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



444
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) -> relation(?individualA, ?individualD)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



445
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



446
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedBehavior]->(uml:StateMachine:Spacecraft States)<-[:classifierBehavior]-(Block:Spacecraft)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



447
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



448
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:ActivityFinalNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:ActivityFinalNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



449
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



450
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ represents(?individualE, ?individualD) ^ Frame(?individualE) ^ UI(?individualF, ?individualE) ^ SimulationConfig(?individualF) ^ executionTarget(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]



451
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualC, ?individualB) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:轨道高度)<-[:nestedClassifier]-(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:重访)<-[:nestedClassifier]-(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:降交点地方时)<-[:nestedClassifier]-(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Payload Accommodation)<-[:nestedClassifier]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Structural Integrity)<-[:nestedClassifier]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Thermal Protection)<-[:nestedClassifier]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Electrical Power)<-[:nestedClassifier]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



452
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:ownedAttribute]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]



453
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Orbit)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Orbit)]



454
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ source(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ edge(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:source]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:source]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:source]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



455
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ ownedRule(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



456
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



457
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:EGYPT-2卫星用户需求)-[:nestedClassifier]->(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)-[:nestedClassifier]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)-[:nestedClassifier]->(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]



458
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]



459
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ source(?individualD, ?individualE) ^ uml:InitialNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:InitialNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



460
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ method(?individualD, ?individualC) ^ TestCase(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)-[:ownedAttribute]->(ReferenceProperty:)-[:type]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)-[:ownedAttribute]->(ReferenceProperty:scale)-[:type]->(Block:Scale)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)-[:ownedAttribute]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)-[:ownedAttribute]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



461
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ argument(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]



462
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ PartProperty(?individualE) ^ informationTarget(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]



463
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:gnd cmd)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:telemetry)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:observation data)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Circular Orbit)]



464
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:平台能力)-[:DerivedFrom]->(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



465
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)<-[:type]-(ReferenceProperty:)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)<-[:type]-(ReferenceProperty:scale)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)<-[:type]-(ReferenceProperty:)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]



466
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ informationSource(?individualD, ?individualC) ^ uml:InformationFlow(?individualD) ^ informationTarget(?individualD, ?individualE) ^ uml:Port(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:informationTarget]->(uml:Port:sensor data if)<-[:ownedAttribute]-(Block:Signal Processor)]



467
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:redefinedProperty]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]



468
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



469
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



470
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



471
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]



472
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



473
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ PartProperty(?individualE) ^ informationTarget(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]



474
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



475
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



476
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ ReferenceProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)-[:redefinedProperty]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



477
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:ActivityFinalNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:ActivityFinalNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



478
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]



479
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



480
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ source(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



481
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ uml:Port(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)-[:type]->(Block:GndCmd&Tlm I/F)]



482
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]



483
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)-[:type]->(Block:Mission Context)]



484
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ subpartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:subpartition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]



485
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:InitialNode(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:InitialNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



486
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



487
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:gnd cmd)-[:type]->(Block:RF)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:telemetry)-[:type]->(Block:RF)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:observation data)-[:type]->(Block:RF)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Circular Orbit)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:gnd cmd)-[:type]->(Block:RF)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:telemetry)-[:type]->(Block:RF)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:observation data)-[:type]->(Block:RF)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Circular Orbit)]



488
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



489
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ source(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ argument(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]



490
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualC, ?individualB) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload Accommodation)<-[:DerivedFrom]-(Requirement:Mechanical Interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Thermal Protection)<-[:DerivedFrom]-(Requirement:Thermal interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:GPS interface)<-[:nestedClassifier]-(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



491
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:CallBehaviorAction(?individualE) ^ result(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]



492
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:定位精度)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:定位精度)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:谱段)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:谱段)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽SWATH)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽SWATH)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:GSD)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:GSD)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:星上固存容量Data Storage)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:SNR)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:SNR)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:指向精度Pointing Accuracy)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:探测器性能)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:探测器性能)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:机动能力)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:机动能力)-[:DerivedFrom]->(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



493
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ doActivity(?individualC, ?individualD) ^ uml:Activity(?individualD) ^ node(?individualD, ?individualE) ^ uml:ActivityParameterNode(?individualE) ^ parameter(?individualE, ?individualF) ^ uml:Parameter(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:parameter]->(uml:Parameter:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:parameter]->(uml:Parameter:)-[:type]->(Block:Sensor CMD)]



494
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ subvertex(?individualD, ?individualC) ^ uml:Region(?individualD) ^ region(?individualE, ?individualD) ^ uml:StateMachine(?individualE) ^ ownedBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:subvertex]-(uml:Region:)<-[:region]-(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



495
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



496
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



497
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:系统寿命mission life )<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:系统寿命mission life )<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



498
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:gnd cmd)-[:type]->(Block:RF)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:telemetry)-[:type]->(Block:RF)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:observation data)-[:type]->(Block:RF)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Circular Orbit)]



499
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



500
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



501
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



502
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)-[:type]->(Block:Spacecraft-Physical)]



503
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



504
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



505
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



506
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ general(?individualE, ?individualD) ^ uml:Generalization(?individualE) ^ generalization(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



507
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ControlFlow(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:edge]->(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



508
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



509
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ generalization(?individualE, ?individualF) ^ uml:Generalization(?individualF) ^ general(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Spacecraft)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Spacecraft)]



510
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:InitialNode(?individualD) ^ inPartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:InitialNode:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



511
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



512
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Mission Enterprise)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Mission Enterprise)]



513
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ generalization(?individualE, ?individualF) ^ uml:Generalization(?individualF) ^ general(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Spacecraft)]



514
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationSource]-(uml:InformationFlow:telemetry)-[:conveyed]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationSource]-(uml:InformationFlow:observation data)-[:conveyed]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Science Data)-[:conveyed]->(Block:Observation Data)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Gnd CMD)-[:conveyed]->(Block:Gnd CMD)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:LV mechanical i/f)<-[:informationSource]-(uml:InformationFlow:flow for Separation Force)-[:conveyed]->(Block:Separation Force)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:LV mechanical i/f)<-[:informationSource]-(uml:InformationFlow:flow for Command)-[:conveyed]->(Block:Command)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



515
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



516
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ ownedRule(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



517
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ target(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ edge(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:target]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:target]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:target]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



518
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



519
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ type(?individualC, ?individualD) ^ ValueType(?individualD) ^ type(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:Data rate)<-[:ownedAttribute]-(Block:DTS Subsystem)]



520
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ generalization(?individualE, ?individualF) ^ uml:Generalization(?individualF) ^ general(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Spacecraft)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]



521
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



522
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ source(?individualD, ?individualE) ^ uml:InitialNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)-[:source]->(uml:InitialNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



523
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



524
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:mass)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:constrainedElement]-(uml:Constraint:resolution)<-[:ownedRule]-(Block:Camera)]



525
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



526
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



527
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



528
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ source(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:source]-(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:source]-(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:source]-(uml:ControlFlow:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



529
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



530
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualC, ?individualB) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:轨道高度)<-[:nestedClassifier]-(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:重访)<-[:nestedClassifier]-(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:降交点地方时)<-[:nestedClassifier]-(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Payload Accommodation)<-[:nestedClassifier]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Structural Integrity)<-[:nestedClassifier]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Thermal Protection)<-[:nestedClassifier]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Electrical Power)<-[:nestedClassifier]-(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



531
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ propertyPath(?individualD, ?individualE) ^ PartProperty(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Mission Enterprise)]



532
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ type(?individualD, ?individualE) ^ ValueType(?individualE) ^ type(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:Data rate)<-[:ownedAttribute]-(Block:DTS Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



533
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]



534
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ supplier(?individualE, ?individualD) ^ Allocate(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:supplier]-(Allocate:)-[:client]->(ValueProperty:Sat Mass卫星重量)<-[:ownedAttribute]-(Block:Mission Enterprise)]



535
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ type(?individualC, ?individualD) ^ ValueType(?individualD) ^ type(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



536
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload Accommodation)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Thermal Protection)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



537
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



538
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ControlFlow(?individualD) ^ edge(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



539
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ generalization(?individualE, ?individualF) ^ uml:Generalization(?individualF) ^ general(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Spacecraft)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]



540
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ represents(?individualD, ?individualE) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:AOCS Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Propulsion Module)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:DTS Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:OBDH Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Payload Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Power Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Harness Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Thermal Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:Structure & Mechanisms Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:TT&C)-[:type]->(Block:TTC Subsystem)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)-[:ownedAttribute]->(PartProperty:)-[:type]->(Block:TTC Subsystem)]



541
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ ownedBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ classifierBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



542
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



543
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



544
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualC, ?individualB) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:定位精度)<-[:DerivedFrom]-(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:谱段)<-[:DerivedFrom]-(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:幅宽SWATH)<-[:DerivedFrom]-(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:SNR)<-[:DerivedFrom]-(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



545
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ type(?individualD, ?individualE) ^ ValueType(?individualE) ^ type(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:Data rate)<-[:ownedAttribute]-(Block:DTS Subsystem)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



546
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ type(?individualD, ?individualE) ^ ValueType(?individualE) ^ type(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:Data rate)<-[:ownedAttribute]-(Block:DTS Subsystem)]



547
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ method(?individualD, ?individualC) ^ TestCase(?individualD) ^ specification(?individualE, ?individualD) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:specification]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:specification]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:specification]-(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:specification]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:specification]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:specification]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:specification]-(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



548
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ uml:Operation(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:MTF)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



549
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



550
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ classifierBehavior(?individualE, ?individualF) ^ uml:StateMachine(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



551
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ generalization(?individualD, ?individualE) ^ uml:Generalization(?individualE) ^ general(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Spacecraft)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)-[:generalization]->(uml:Generalization:)-[:general]->(Block:Camera)]



552
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Context)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Context)]



553
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ partition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



554
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



555
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ group(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



556
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ redefinedProperty(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



557
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedRule(?individualE, ?individualF) ^ uml:Constraint(?individualF) ^ constrainedElement(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



558
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



559
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ propertyPath(?individualD, ?individualE) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



560
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



561
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ type(?individualC, ?individualD) ^ ValueType(?individualD) ^ type(?individualE, ?individualD) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:type]->(ValueType:Shape)<-[:type]-(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:type]->(ValueType:milliradian)<-[:type]-(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)-[:type]->(ValueType:mbps)<-[:type]-(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



562
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ edge(?individualD, ?individualE) ^ uml:ControlFlow(?individualE) ^ edge(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



563
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ end(?individualF, ?individualE) ^ BindingConnector(?individualF) ^ ownedConnector(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)<-[:end]-(BindingConnector:)<-[:ownedConnector]-(Block:Analysis Context)]



564
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ represents(?individualE, ?individualD) ^ Frame(?individualE) ^ UI(?individualF, ?individualE) ^ SimulationConfig(?individualF) ^ executionTarget(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:represents]-(Frame:Camera Parameters Analysis Interface)<-[:UI]-(SimulationConfig:Sim)-[:executionTarget]->(Block:Camera Parameters Analysis)]



565
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]



566
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Reliability)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Interface)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



567
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



568
Requirement(?individualA) ^ TracedTo(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload  Subsystem Specification)-[:TracedTo]->(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



569
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationTarget(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:observation sensor i/f)<-[:informationTarget]-(uml:InformationFlow:flow for Emissions)-[:conveyed]->(Block:Emissions)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationTarget]-(uml:InformationFlow:gnd cmd)-[:conveyed]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationTarget]-(uml:InformationFlow:flow for Gnd Command)-[:conveyed]->(Block:Gnd CMD)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationTarget]-(uml:InformationFlow:flow for Observation Data)-[:conveyed]->(Block:Observation Data)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationTarget]-(uml:InformationFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]



570
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ specification(?individualE, ?individualF) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



571
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]



572
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedRule(?individualD, ?individualE) ^ uml:Constraint(?individualE) ^ constrainedElement(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



573
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ informationSource(?individualD, ?individualC) ^ uml:InformationFlow(?individualD) ^ conveyed(?individualD, ?individualE) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



574
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ constrainedElement(?individualE, ?individualD) ^ uml:Constraint(?individualE) ^ ownedRule(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]



575
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ constrainedElement(?individualD, ?individualE) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



576
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ constrainedElement(?individualD, ?individualC) ^ uml:Constraint(?individualD) ^ ownedRule(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]



577
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:State(?individualE) ^ constrainedElement(?individualF, ?individualE) ^ uml:Constraint(?individualF) ^ ownedRule(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)<-[:ownedRule]-(Block:Camera)]



578
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



579
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ uml:Property(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ uml:Interaction(?individualF) ^ ownedBehavior(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:type]-(uml:Property:)<-[:ownedAttribute]-(uml:Interaction:On-Orbit & Data Distribution Events)<-[:ownedBehavior]-(Block:Perform Mission-Event Sequence)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)<-[:type]-(uml:Property:)<-[:ownedAttribute]-(uml:Interaction:Mission Events)<-[:ownedBehavior]-(Block:Perform Mission-Event Sequence)]



580
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ group(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:ActivityFinalNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ActivityFinalNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



581
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ result(?individualE, ?individualF) ^ uml:OutputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Sensor CMD)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:result]->(uml:OutputPin:)-[:type]->(Block:Payload Sensor Data)]



582
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedRule(?individualD, ?individualE) ^ uml:Constraint(?individualE) ^ constrainedElement(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:mass)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedRule]->(uml:Constraint:resolution)-[:constrainedElement]->(Block:Camera)]



583
Requirement(?individualA) ^ TracedTo(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload  Subsystem Specification)-[:TracedTo]->(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



584
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ behavior(?individualD, ?individualE) ^ uml:Activity(?individualE) ^ node(?individualE, ?individualF) ^ uml:ActivityParameterNode(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Measure Resolution)-[:node]->(uml:ActivityParameterNode:argument)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Control Unit-Under-Test)-[:node]->(uml:ActivityParameterNode:result)-[:type]->(Block:Sensor CMD)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Process Signal)-[:node]->(uml:ActivityParameterNode:result)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Process Signal)-[:node]->(uml:ActivityParameterNode:argument)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Display Imagery)-[:node]->(uml:ActivityParameterNode:result)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Display Imagery)-[:node]->(uml:ActivityParameterNode:argument)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Sense Thermal Emissions)-[:node]->(uml:ActivityParameterNode:)-[:type]->(Block:Sensor CMD)]



585
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



586
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ propertyPath(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)-[:type]->(Block:Mission Context)]



587
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



588
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:State(?individualC) ^ doActivity(?individualC, ?individualD) ^ uml:Activity(?individualD) ^ ownedParameter(?individualD, ?individualE) ^ uml:Parameter(?individualE) ^ parameter(?individualF, ?individualE) ^ uml:ActivityParameterNode(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)<-[:parameter]-(uml:ActivityParameterNode:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)<-[:parameter]-(uml:ActivityParameterNode:)-[:type]->(Block:Sensor CMD)]



589
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



590
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



591
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ inPartition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



592
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



593
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:gnd cmd)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:telemetry)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:observation data)-[:type]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Circular Orbit)]



594
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



595
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



596
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ informationSource(?individualE, ?individualD) ^ uml:InformationFlow(?individualE) ^ realizingConnector(?individualE, ?individualF) ^ uml:Connector(?individualF) ^ ownedConnector(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:realizingConnector]->(uml:Connector:)<-[:ownedConnector]-(Block:Payload Subsystem)]



597
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



598
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) -> relation(?individualA, ?individualD)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



599
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)-[:redefinedProperty]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)-[:redefinedProperty]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



600
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



601
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ specification(?individualD, ?individualE) ^ TestCase(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)-[:specification]->(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



602
Requirement(?individualA) ^ TracedTo(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



603
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:gnd cmd)-[:type]->(Block:RF)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:telemetry)-[:type]->(Block:RF)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:observation data)-[:type]->(Block:RF)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Circular Orbit)]



604
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



605
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ ReferenceProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Mass Properties)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)<-[:type]-(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]
[(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)<-[:type]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



606
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Cost)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:寿命lifetime)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Mass)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Size)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Power)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]



607
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ node(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



608
Requirement(?individualA) ^ TracedTo(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ nestedClassifier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)<-[:TracedTo]-(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:EGYPT-2卫星用户需求)<-[:TracedTo]-(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



609
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



610
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ behavior(?individualD, ?individualE) ^ uml:Activity(?individualE) ^ ownedParameter(?individualE, ?individualF) ^ uml:Parameter(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Measure Resolution)-[:ownedParameter]->(uml:Parameter:argument)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Control Unit-Under-Test)-[:ownedParameter]->(uml:Parameter:result)-[:type]->(Block:Sensor CMD)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Process Signal)-[:ownedParameter]->(uml:Parameter:result)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Process Signal)-[:ownedParameter]->(uml:Parameter:argument)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Display Imagery)-[:ownedParameter]->(uml:Parameter:result)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Display Imagery)-[:ownedParameter]->(uml:Parameter:argument)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:behavior]->(uml:Activity:Sense Thermal Emissions)-[:ownedParameter]->(uml:Parameter:)-[:type]->(Block:Sensor CMD)]



611
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Field of View)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Data Rate)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:Spectral Band)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:幅宽Swath)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:ＳＮＲ信噪比)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:时间同步精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:NEΔρ)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:量化等级)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:TDICCD积分级数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]



612
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:系统寿命mission life )<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:系统寿命mission life )<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



613
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ specification(?individualC, ?individualD) ^ TestCase(?individualD) ^ method(?individualD, ?individualE) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)-[:method]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)-[:method]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:specification]->(TestCase:verify mass)-[:method]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)-[:method]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)-[:method]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)-[:method]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:specification]->(TestCase:verify sensor resolution)-[:method]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



614
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ group(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:group]->(AllocateActivityPartition:)-[:represents]->(ReferenceProperty:system-under-test)<-[:ownedAttribute]-(Block:Verification Context-Sensor Performance)]



615
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:EGYPT-2卫星用户需求)-[:nestedClassifier]->(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



616
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



617
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:ActivityFinalNode(?individualE) ^ node(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:ActivityFinalNode:)<-[:node]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



618
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)-[:type]->(Block:Mission Context)]



619
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ edge(?individualC, ?individualD) ^ uml:ObjectFlow(?individualD) ^ target(?individualD, ?individualE) ^ uml:InputPin(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:edge]->(uml:ObjectFlow:)-[:target]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]



620
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ method(?individualF, ?individualE) ^ TestCase(?individualF) ^ ownedOperation(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Sensitivity)<-[:method]-(TestCase:verify sensor sensitivity)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)<-[:method]-(TestCase:verify sensor resolution)<-[:ownedOperation]-(Block:Verification Context-Sensor Performance)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)<-[:method]-(TestCase:verify mass)<-[:ownedOperation]-(Block:Verification Context-Mass Properties)]



621
Requirement(?individualA) ^ client(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ supplier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



622
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationTarget(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]



623
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Mission Enterprise)]



624
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedConnector(?individualD, ?individualE) ^ uml:Connector(?individualE) ^ realizingConnector(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedConnector]->(uml:Connector:)<-[:realizingConnector]-(ItemFlow:flow for Telemetry)-[:conveyed]->(Block:Telemetry)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedConnector]->(uml:Connector:)<-[:realizingConnector]-(ItemFlow:flow for Gnd CMD)-[:conveyed]->(Block:Gnd CMD)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedConnector]->(uml:Connector:)<-[:realizingConnector]-(ItemFlow:flow for Observation Data)-[:conveyed]->(Block:Observation Data)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedConnector]->(uml:Connector:)<-[:realizingConnector]-(ItemFlow:observation data1)-[:conveyed]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedConnector]->(uml:Connector:)<-[:realizingConnector]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedConnector]->(uml:Connector:)<-[:realizingConnector]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]



625
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Orbit Constraints)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:平台能力)<-[:nestedClassifier]-(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload Accommodation)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Payload Accommodation)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Structural Integrity)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Thermal Protection)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Thermal Protection)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Power)<-[:nestedClassifier]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:DeltaV燃料配置)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:DeltaV燃料配置)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:DeltaV燃料配置)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:定位精度)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:谱段)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:幅宽SWATH)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:GSD)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:GSD)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:星上固存容量Data Storage)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:SNR)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:指向精度Pointing Accuracy)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:探测器性能)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:机动能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:频段与体制)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:故障处理能力Fault Management)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:升降轨轨控能力)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:离轨时间)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:加密)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:蓄电池循环次数)<-[:nestedClassifier]-(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Unit Cost)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星寿命life time)<-[:nestedClassifier]-(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:成像能力和质量image capacity)<-[:nestedClassifier]-(Requirement:卫星类型)-[:nestedClassifier]->(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



626
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]



627
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ represents(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ subpartition(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]



628
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ type(?individualF, ?individualE) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



629
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Satisfy(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



630
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



631
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:power)<-[:redefinedProperty]-(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:size)<-[:redefinedProperty]-(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:data rate)<-[:redefinedProperty]-(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:field of view)<-[:redefinedProperty]-(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:resolution)<-[:redefinedProperty]-(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:sensitivity)<-[:redefinedProperty]-(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedAttribute]->(ValueProperty:lifetime)<-[:redefinedProperty]-(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



632
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ DerivedFrom(?individualD, ?individualC) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:卫星类型)<-[:DerivedFrom]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星类型)<-[:DerivedFrom]-(Requirement:平台能力)-[:nestedClassifier]->(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]



633
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ uml:Operation(?individualE) ^ ownedOperation(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)]



634
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



635
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ DerivedFrom(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]



636
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ represents(?individualE, ?individualD) ^ AllocateActivityPartition(?individualE) ^ subpartition(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)<-[:represents]-(AllocateActivityPartition:)<-[:subpartition]-(AllocateActivityPartition:)-[:represents]->(Block:Payload Subsystem)]



637
Requirement(?individualA) ^ nestedClassifier(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ group(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:维轨和规避燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:离轨燃料配置)<-[:nestedClassifier]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:group]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]



638
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) ^ ownedAttribute(?individualE, ?individualF) ^ uml:Port(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)-[:ownedAttribute]->(uml:Port:p1)-[:type]->(Block:GndCmd&Tlm I/F)]



639
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ DerivedFrom(?individualC, ?individualB) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ redefinedProperty(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:５年寿命期内轨道维持和碎片规避,寿命末期离轨功能)<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)-[:redefinedProperty]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:系统寿命mission life )<-[:DerivedFrom]-(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)-[:redefinedProperty]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)-[:redefinedProperty]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)-[:redefinedProperty]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:成像能力和质量image capacity)<-[:DerivedFrom]-(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)-[:redefinedProperty]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)]



640
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Verify(?individualC) ^ client(?individualC, ?individualD) ^ TestCase(?individualD) ^ node(?individualD, ?individualE) ^ uml:CallBehaviorAction(?individualE) ^ argument(?individualE, ?individualF) ^ uml:InputPin(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Thermal Imagery)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Payload Sensor Data)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Observation Data)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:argument]->(uml:InputPin:)-[:type]->(Block:Sensor CMD)]



641
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Satisfy(?individualD) ^ client(?individualD, ?individualE) ^ ValueProperty(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Structural Integrity)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:DeltaV燃料配置)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:GSD)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星可靠度satellite reliability)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:重量)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



642
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ client(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Refine(?individualE) ^ client(?individualE, ?individualF) ^ uml:Port(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Power)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]
[(Requirement:Electrical Interface)-[:DerivedFrom]->(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



643
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Spacecraft-Physical)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)-[:type]->(Block:Mission Enterprise)]



644
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ redefinedProperty(?individualD, ?individualC) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:redefinedProperty]-(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(ReferenceProperty:subject of analysis)<-[:ownedAttribute]-(Block:Analysis Context)]



645
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ DeriveReqt(?individualB) ^ client(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ ownedAttribute(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Power)<-[:supplier]-(DeriveReqt:)-[:client]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



646
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ ownedBehavior(?individualD, ?individualE) ^ uml:StateMachine(?individualE) ^ classifierBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:ownedBehavior]->(uml:StateMachine:Payload Sensor States)<-[:classifierBehavior]-(Block:Camera)]



647
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ partWithPort(?individualD, ?individualE) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ type(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:partWithPort]->(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)-[:type]->(Block:Mid-Range IR Scanner)]



648
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Verify(?individualD) ^ client(?individualD, ?individualE) ^ TestCase(?individualE) ^ partition(?individualE, ?individualF) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Spacecraft-Physical)]
[(Requirement:Spacecraft Specification)-[:nestedClassifier]->(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Mass)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Scale)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



649
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:Quality Characteristics)-[:nestedClassifier]->(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Data Rate)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Functional and Performance)-[:nestedClassifier]->(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]



650
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ constrainedElement(?individualE, ?individualD) ^ uml:Constraint(?individualE) ^ constrainedElement(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)<-[:constrainedElement]-(uml:Constraint:power)-[:constrainedElement]->(Block:Camera)]



651
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ node(?individualC, ?individualD) ^ uml:CallBehaviorAction(?individualD) ^ inPartition(?individualD, ?individualE) ^ AllocateActivityPartition(?individualE) ^ represents(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Signal Processor)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Display)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:node]->(uml:CallBehaviorAction:)-[:inPartition]->(AllocateActivityPartition:)-[:represents]->(Block:Optical Bench)]



652
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ role(?individualD, ?individualC) ^ NestedConnectorEnd(?individualD) ^ end(?individualE, ?individualD) ^ uml:Connector(?individualE) ^ ownedConnector(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)<-[:end]-(uml:Connector:)<-[:ownedConnector]-(Block:Payload Subsystem)]



653
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Mass 卫星)<-[:DerivedFrom]-(Requirement:Mass)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Structural Integrity)<-[:DerivedFrom]-(Requirement:Size)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Power)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:DeltaV燃料配置)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]
[(Requirement:GSD)<-[:DerivedFrom]-(Requirement:Field of View)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:卫星可靠度satellite reliability)<-[:DerivedFrom]-(Requirement:Reliability)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Mid-Range IR Scanner)]
[(Requirement:重量)<-[:DerivedFrom]-(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



654
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ partWithPort(?individualE, ?individualF) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:role]-(NestedConnectorEnd:)-[:partWithPort]->(PartProperty:)<-[:ownedAttribute]-(Block:Payload Subsystem)]



655
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ nestedClassifier(?individualB, ?individualC) ^ Requirement(?individualC) ^ supplier(?individualD, ?individualC) ^ Refine(?individualD) ^ client(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationSource(?individualF, ?individualE) ^ uml:InformationFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Payload  Subsystem Specification)-[:nestedClassifier]->(Requirement:Interface)-[:nestedClassifier]->(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:informationSource]-(uml:InformationFlow:flow for Payload Sensor Data)-[:conveyed]->(Block:Payload Sensor Data)]



656
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ ReferenceProperty(?individualE) ^ type(?individualE, ?individualF) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(ReferenceProperty:orbit)-[:type]->(Block:Orbit)]



657
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ ValueProperty(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ ownedAttribute(?individualD, ?individualE) ^ uml:Port(?individualE) ^ informationTarget(?individualF, ?individualE) ^ ItemFlow(?individualF) ^ conveyed(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationTarget]-(ItemFlow:gnd cmd)-[:conveyed]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gnd observation data i/f)<-[:informationTarget]-(ItemFlow:observation data1)-[:conveyed]->(Block:RF)]
[(Requirement:Mass 卫星)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft)-[:ownedAttribute]->(uml:Port:gps i/f)<-[:informationTarget]-(ItemFlow:gps)-[:conveyed]->(Block:RF)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Reliability)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:lifetime)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Mass)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Size)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:size)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Power)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:power)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:resolution)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:sensitivity)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Field of View)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:field of view)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p1)<-[:informationTarget]-(ItemFlow:flow for Electrical Power)-[:conveyed]->(Block:Electrical Power)]
[(Requirement:Data Rate)<-[:supplier]-(Refine:)-[:client]->(ValueProperty:data rate)<-[:ownedAttribute]-(Block:Camera)-[:ownedAttribute]->(uml:Port:p2)<-[:informationTarget]-(ItemFlow:flow for Heat)-[:conveyed]->(Block:Heat)]



658
Requirement(?individualA) ^ nestedClassifier(?individualA, ?individualB) ^ Requirement(?individualB) ^ client(?individualC, ?individualB) ^ DeriveReqt(?individualC) ^ supplier(?individualC, ?individualD) ^ Requirement(?individualD) ^ supplier(?individualE, ?individualD) ^ Satisfy(?individualE) ^ client(?individualE, ?individualF) ^ ValueProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Physical)-[:nestedClassifier]->(Requirement:Mass)<-[:client]-(DeriveReqt:)-[:supplier]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:ownedAttribute]-(Block:Spacecraft-Physical)]



659
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:State(?individualD) ^ doActivity(?individualD, ?individualE) ^ uml:Activity(?individualE) ^ client(?individualF, ?individualE) ^ Allocate(?individualF) ^ supplier(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Payload Subsystem)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Camera)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:State:on)-[:doActivity]->(uml:Activity:Sense Thermal Emissions)<-[:client]-(Allocate:)-[:supplier]->(Block:Spacecraft-Physical)]



660
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Operation(?individualC) ^ ownedOperation(?individualD, ?individualC) ^ Block(?individualD) ^ classifierBehavior(?individualD, ?individualE) ^ uml:StateMachine(?individualE) ^ ownedBehavior(?individualF, ?individualE) ^ Block(?individualF) -> relation(?individualA, ?individualF)
[(Requirement:MTF)<-[:supplier]-(Refine:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)-[:classifierBehavior]->(uml:StateMachine:Payload Sensor States)<-[:ownedBehavior]-(Block:Camera)]



661
Requirement(?individualA) ^ DerivedFrom(?individualA, ?individualB) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ ValueProperty(?individualD) ^ role(?individualE, ?individualD) ^ NestedConnectorEnd(?individualE) ^ propertyPath(?individualE, ?individualF) ^ PartProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Enterprise)]
[(Requirement:Mass)-[:DerivedFrom]->(Requirement:Mass 卫星)<-[:supplier]-(Satisfy:)-[:client]->(ValueProperty:mass)<-[:role]-(NestedConnectorEnd:)-[:propertyPath]->(PartProperty:)<-[:ownedAttribute]-(Block:Mission Context)]



662
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Refine(?individualB) ^ client(?individualB, ?individualC) ^ uml:Port(?individualC) ^ ownedAttribute(?individualD, ?individualC) ^ Block(?individualD) ^ type(?individualE, ?individualD) ^ PartProperty(?individualE) ^ redefinedProperty(?individualF, ?individualE) ^ ReferenceProperty(?individualF) ^ ownedAttribute(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)<-[:type]-(PartProperty:)<-[:redefinedProperty]-(ReferenceProperty:unit-under-test)<-[:ownedAttribute]-(Block:Payload Subsystem)]



663
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Refine(?individualC) ^ client(?individualC, ?individualD) ^ uml:Port(?individualD) ^ ownedAttribute(?individualE, ?individualD) ^ Block(?individualE) -> relation(?individualA, ?individualE)
[(Requirement:Electrical Power)<-[:DerivedFrom]-(Requirement:Electrical Interface)<-[:supplier]-(Refine:)-[:client]->(uml:Port:sensor data i/f)<-[:ownedAttribute]-(Block:Camera)]



664
Requirement(?individualA) ^ DerivedFrom(?individualB, ?individualA) ^ Requirement(?individualB) ^ supplier(?individualC, ?individualB) ^ Satisfy(?individualC) ^ client(?individualC, ?individualD) ^ uml:Operation(?individualD) ^ ownedOperation(?individualE, ?individualD) ^ Block(?individualE) ^ general(?individualF, ?individualE) ^ uml:Generalization(?individualF) ^ generalization(?individualG, ?individualF) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]
[(Requirement:MTF)<-[:DerivedFrom]-(Requirement:MTF)<-[:supplier]-(Satisfy:)-[:client]->(uml:Operation:sense thermal emissions)<-[:ownedOperation]-(Block:Camera)<-[:general]-(uml:Generalization:)<-[:generalization]-(Block:Mid-Range IR Scanner)]



665
Requirement(?individualA) ^ supplier(?individualB, ?individualA) ^ Verify(?individualB) ^ client(?individualB, ?individualC) ^ TestCase(?individualC) ^ partition(?individualC, ?individualD) ^ AllocateActivityPartition(?individualD) ^ inPartition(?individualE, ?individualD) ^ uml:ControlFlow(?individualE) ^ edge(?individualF, ?individualE) ^ AllocateActivityPartition(?individualF) ^ represents(?individualF, ?individualG) ^ Block(?individualG) -> relation(?individualA, ?individualG)
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]
[(Requirement:MTF)<-[:supplier]-(Verify:)-[:client]->(TestCase:Verify Sensor Resolution)-[:partition]->(AllocateActivityPartition:)<-[:inPartition]-(uml:ControlFlow:)<-[:edge]-(AllocateActivityPartition:)-[:represents]->(Block:Test Operator)]



